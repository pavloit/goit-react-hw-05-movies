{"version":3,"file":"static/js/247.31969bf7.chunk.js","mappings":"mPAKMA,EAAiBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6CAK3BC,EAAaH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6EAKvBG,EAAYL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,+BAIrBK,EAAiBP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,6BAwC/B,UApCa,WACX,IAAAO,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACZI,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEOC,EAAAA,EAAAA,GAAM,sCAADC,OAAuCb,EAAO,sDAAqD,KAAD,EAAtHQ,EAAMC,EAAAK,KACZf,EAAQS,EAAOO,KAAKjB,MAAMW,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAE1BQ,QAAQC,MAAM,6BAA4BT,EAAAO,IAAS,yBAAAP,EAAAU,OAAA,GAAAZ,EAAA,kBAEtD,kBAPc,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KASflB,GACF,GAAG,CAACH,KAGFsB,EAAAA,EAAAA,KAAA,OAAAC,SACGzB,GACCwB,EAAAA,EAAAA,KAAA,OAAAC,SACGzB,EAAK0B,KAAI,SAAAC,GAAK,OACbC,EAAAA,EAAAA,MAAC1C,EAAc,CAAAuC,SAAA,EACbD,EAAAA,EAAAA,KAAChC,EAAS,CAAAiC,SAAEE,EAAME,QAClBL,EAAAA,EAAAA,KAAC9B,EAAc,CAAA+B,SAAEE,EAAMG,YACtBH,EAAMI,eACLP,EAAAA,EAAAA,KAAClC,EAAU,CAAC0C,IAAG,kCAAAjB,OAAoCY,EAAMI,cAAgBE,IAAKN,EAAME,SAJnEF,EAAMO,QAMV,MAGnB,cAGV,C","sources":["components/Cast/Cast.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nconst ActorContainer = styled.div`\n  margin: 10px;\n  padding: 10px;\n`;\n\nconst ActorImage = styled.img`\n  width: 100px; // Make the actor images smaller\n  height: auto;\n`;\n\nconst ActorName = styled.h2`\n  font-size: 1.5em;\n`;\n\nconst ActorCharacter = styled.p`\n  font-size: 1em;\n`;\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams(); // Get movieId from URL\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=04b4d601805ac31a2739906707e3a331`);\n        setCast(result.data.cast);\n      } catch (error) {\n        console.error('Error fetching movie cast:', error);\n      }\n    };\n\n    fetchData();\n  }, [movieId]); // Re-fetch when movieId changes\n\n  return (\n    <div>\n      {cast ? (\n        <div>\n          {cast.map(actor => (\n            <ActorContainer key={actor.cast_id}>\n              <ActorName>{actor.name}</ActorName>\n              <ActorCharacter>{actor.character}</ActorCharacter>\n              {actor.profile_path && (\n                <ActorImage src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`} alt={actor.name} />\n              )}\n            </ActorContainer>\n          ))}\n        </div>\n      ) : 'Loading...'}\n    </div>\n  );\n};\n\nexport default Cast;"],"names":["ActorContainer","styled","_templateObject","_taggedTemplateLiteral","ActorImage","_templateObject2","ActorName","_templateObject3","ActorCharacter","_templateObject4","_useState","useState","_useState2","_slicedToArray","cast","setCast","movieId","useParams","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","result","_context","prev","next","axios","concat","sent","data","t0","console","error","stop","apply","arguments","_jsx","children","map","actor","_jsxs","name","character","profile_path","src","alt","cast_id"],"sourceRoot":""}