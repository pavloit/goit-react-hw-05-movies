{"version":3,"file":"static/js/186.f78391de.chunk.js","mappings":"iPAKMA,EAAkBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sFAM5BC,EAAeH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iCAIxBG,EAAgBL,EAAAA,GAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,wBAuC9B,UAnCgB,WACd,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAe1B,OAbAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEOC,EAAAA,EAAAA,GAAM,sCAADC,OAAuCnB,EAAO,sDAAqD,KAAD,EAAtHc,EAAMC,EAAAK,KACZb,EAAWO,EAAOO,KAAKC,SAASP,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAEhCS,QAAQC,MAAM,gCAA+BV,EAAAQ,IAAS,yBAAAR,EAAAW,OAAA,GAAAb,EAAA,kBAEzD,kBAPc,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,KASfnB,GACF,GAAG,CAACT,KAGF6B,EAAAA,EAAAA,KAAA,OAAAC,SACGxB,EAAQyB,QACPF,EAAAA,EAAAA,KAAA,OAAAC,SACGxB,EAAQ0B,KAAI,SAAAC,GAAM,OACjBC,EAAAA,EAAAA,MAAC1C,EAAe,CAAAsC,SAAA,EACdD,EAAAA,EAAAA,KAACjC,EAAY,CAAAkC,SAAEG,EAAOE,UACtBN,EAAAA,EAAAA,KAAC/B,EAAa,CAAAgC,SAAEG,EAAOG,YAFHH,EAAOI,GAGX,MAItB,qBAIR,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom'; \nimport axios from 'axios';\nimport styled from 'styled-components';\n\nconst ReviewContainer = styled.div`\n  margin-bottom: 20px;\n  padding: 10px;\n  border-bottom: 1px solid #ccc;\n`;\n\nconst ReviewAuthor = styled.h2`\n  margin: 0 0 10px 0;\n`;\n\nconst ReviewContent = styled.p`\n  margin: 0;\n`;\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=04b4d601805ac31a2739906707e3a331`);\n        setReviews(result.data.results);\n      } catch (error) {\n        console.error('Error fetching movie reviews:', error);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length ? (\n        <div>\n          {reviews.map(review => (\n            <ReviewContainer key={review.id}>\n              <ReviewAuthor>{review.author}</ReviewAuthor>\n              <ReviewContent>{review.content}</ReviewContent>\n            </ReviewContainer>\n          ))}\n        </div>\n      ) : (\n        'No reviews yet...'\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;"],"names":["ReviewContainer","styled","_templateObject","_taggedTemplateLiteral","ReviewAuthor","_templateObject2","ReviewContent","_templateObject3","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","result","_context","prev","next","axios","concat","sent","data","results","t0","console","error","stop","apply","arguments","_jsx","children","length","map","review","_jsxs","author","content","id"],"sourceRoot":""}