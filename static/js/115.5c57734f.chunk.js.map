{"version":3,"file":"static/js/115.5c57734f.chunk.js","mappings":"yPAKMA,EAAOC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sGAOlBC,EAAQH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kDAKpBG,EAASL,EAAAA,GAAAA,OAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kQA+D5B,UA9Ce,WACb,IAAAK,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA8BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACpBG,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEOC,EAAAA,EAAAA,IAAU,4CAA6C,CAC1EC,OAAQ,CACNC,QAAS,mCACTC,MAAOjB,EACPkB,KAAM,KAEP,KAAD,EANIR,EAAMC,EAAAQ,KAOZtB,EAAQa,EAAOd,KAAKwB,SAAST,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAE7BW,QAAQC,MAAM,4BAA2BZ,EAAAU,IAAS,yBAAAV,EAAAa,OAAA,GAAAf,EAAA,kBAErD,kBAbc,OAAAH,EAAAmB,MAAA,KAAAC,UAAA,KAeX1B,GACFK,GAEJ,GAAG,CAACL,IAOJ,OACE2B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAC3C,EAAI,CAAC6C,SAPW,SAACC,GACpBA,EAAEC,iBACF9B,EAAW6B,EAAEE,OAAOC,SAASC,OAAOC,MACtC,EAIiCP,SAAA,EAC3BQ,EAAAA,EAAAA,KAAChD,EAAK,CAACiD,KAAK,OAAOC,KAAK,SAASC,YAAY,sBAC7CH,EAAAA,EAAAA,KAAC9C,EAAM,CAAC+C,KAAK,SAAQT,SAAC,cAEvBhC,EAAOA,EAAK4C,KAAI,SAAAC,GAAK,OACpBL,EAAAA,EAAAA,KAAA,OAAAR,UACEQ,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAI,CAAEC,SAAS,WAADC,OAAaJ,EAAMK,IAAMC,MAAO,CAAEC,KAAM9C,EAAS0C,WAAahB,SAAEa,EAAMQ,SADlFR,EAAMK,GAEV,IACH,OAGX,C","sources":["components/Movies/Movies.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Form = styled.form`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n  margin-top: 20px; \n`;\n\nconst Input = styled.input`\n  margin-right: 10px;\n  padding: 5px;\n`;\n\nconst Button = styled.button`\n  padding: 5px 10px;\n  background-color: #4b4bbe;\n  color: white;\n  border: none;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #3a3a8e; \n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 3px rgba(75,75,190,0.5); \n  }\n`;\n\nconst Movies = () => {\n  const [data, setData] = useState(null);\n  const [keyword, setKeyword] = useState('');\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios.get('https://api.themoviedb.org/3/search/movie', {\n          params: {\n            api_key: '04b4d601805ac31a2739906707e3a331',\n            query: keyword,\n            page: 1\n          }\n        });\n        setData(result.data.results);\n      } catch (error) {\n        console.error('Error making API request:', error);\n      }\n    };\n\n    if (keyword) {\n      fetchData();\n    }\n  }, [keyword]);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    setKeyword(e.target.elements.search.value);\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSearch}>\n        <Input type=\"text\" name=\"search\" placeholder=\"Search movies...\" />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      {data ? data.map(movie => (\n        <div key={movie.id}>\n          <Link to={{ pathname: `/movies/${movie.id}`, state: { from: location.pathname } }}>{movie.title}</Link>\n        </div>\n      )) : null}\n    </div>\n  );\n};\n\nexport default Movies;"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","Button","_templateObject3","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","keyword","setKeyword","location","useLocation","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","result","_context","prev","next","axios","params","api_key","query","page","sent","results","t0","console","error","stop","apply","arguments","_jsxs","children","onSubmit","e","preventDefault","target","elements","search","value","_jsx","type","name","placeholder","map","movie","Link","to","pathname","concat","id","state","from","title"],"sourceRoot":""}